@page
@model HandlerSelectorModel
@using Microsoft.AspNetCore.Mvc.RazorPages
@using Microsoft.EntityFrameworkCore

<!DOCTYPE html>
<html>
<head>
    <link rel="stylesheet" href="/lib/bootstrap/css/bootstrap.min.css" />
</head>
<body>
    <div class="bg-primary text-white text-center m-2 p-2">Selector</div>
    <div class="m-2">
        <table class="table table-bordered table-sm table-striped">
            <tbody>
                <tr><th>Name</th><td>@Model.Product?.Name</td></tr>
                <tr><th>Price</th><td>@Model.Product?.Price.ToString("c")</td></tr>
                <tr><th>Category</th><td>@Model.Product?.Category?.Name</td></tr>
                <tr><th>Supplier</th><td>@Model.Product?.Supplier?.Name</td></tr>
            </tbody>
        </table>
        <a href="/handlerselector" class="btn btn-primary">Standard</a>
        <a href="/handlerselector?handler=related" class="btn btn-primary">Related</a>
    </div>
</body>
</html>

@functions {

    public class HandlerSelectorModel : PageModel {


        private DataContext _context;

        public Product? Product { get; set; }

        public HandlerSelectorModel(DataContext context) {

            _context = context;
        }

        public async Task OnGetAsync(long id = 1)
        {
            Product = await _context.Products.FindAsync(id);

        }


        public async Task OnGetRelatedAsync(long id = 1){
            Product = await _context.Products
                        .Include(s => s.Supplier)
                        .Include(c => c.Category)
                        .FirstOrDefaultAsync(p => p.ProductId == id);
            if(Product != null && Product.Supplier != null) {
                Product.Supplier.Products = null;
            }
            if (Product != null && Product.Category != null)
            {
                Product.Category.Products = null;
            }
        }

    }

}